version: "3"

services:
    web:
        build:
            context: .
            dockerfile: Dockerfile

        restart: always

        ports: 
            - "8080:80"

        environment:
            DATABASE_URL: "postgres://postgres:password@postgres:5432/Database"
            ASYNC_DATABASE_URL: "postgresql+asyncpg://postgres:password@postgres:5432/Databse"
            CELERY_BROKER_URL: "amqp://guest:guest@rabbitmq:5672//"
            CELERY_RESULT_BACKEND: "redis://redis:6379/0"

        depends_on:
            postgres:
              condition: service_healthy
            redis:
              condition: service_started
            rabbitmq:
              condition: service_started

    postgres:
        image: postgres:13
        build:
            context: ./db
            dockerfile: Dockerfile
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: password
            POSTGRES_DB: Database
            POSTGRES_HOST_AUTH_METHOD: trust
        restart: always
        volumes:
            - postgres_data:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 10s
            timeout: 10s
            retries: 5


    # Redis for Celery result backend
    redis:
        image: redis:latest
        restart: always
        ports:
        - "6380:6379"

    # RabbitMQ for Celery broker
    rabbitmq:
        image: rabbitmq:management
        restart: always
        ports:
        - "5672:5672"   # RabbitMQ broker port
        - "15672:15672" # RabbitMQ management dashboard
        environment:
            RABBITMQ_DEFAULT_USER: guest
            RABBITMQ_DEFAULT_PASS: guest
        healthcheck:
            test: ["CMD", "rabbitmqctl", "ping"]
            interval: 10s
            timeout: 5s
            retries: 5

    # Celery worker for background tasks
    celery_worker:
        build:
            context: .
            dockerfile: Dockerfile
        command: celery -A celery_worker.celery_app worker --loglevel=info --concurrency=1
        environment:
            DATABASE_URL: "postgres://postgres:password@postgres:5432/Database"  # Use 'db' instead of 'localhost'
            ASYNC_DATABASE_URL: "postgresql+asyncpg://postgres:password@postgres:5432/Databse"
            CELERY_BROKER_URL: "amqp://guest:guest@rabbitmq:5672//"
            CELERY_RESULT_BACKEND: "redis://redis:6379/0"
        depends_on:
        # - db
        # - redis
        # - rabbitmq
            postgres:
                condition: service_healthy
            redis:
                condition: service_started
            rabbitmq:
                condition: service_healthy


    # flower:
    #     image: mher/flower
    #     # command: flower -A celery_worker.celery_app --port=5555
    #     command: ["flower", "--broker=amqp://guest:guest@rabbitmq:5672//"]
    #     ports:
    #         - "5555:5555"  # Flower will be available on port 5555
    #     depends_on:
    #         redis:
    #             condition: service_started
    #         rabbitmq:
    #             condition: service_healthy
            # - rabbitmq


    pgadmin:
        build:
            context: .
            dockerfile: Dockerfile.pgadmin
        volumes:
            - pgadmin_data:/var/lib/pgadmin
        ports:
            - "2020:80"
        restart: always
        depends_on:
            postgres:
                condition: service_healthy
        environment:
            PGADMIN_DEFAULT_EMAIL: admin@admin.com
            PGADMIN_DEFAULT_PASSWORD: password


volumes:
    postgres_data:
    upload_data:
    pgadmin_data:
        driver: local
